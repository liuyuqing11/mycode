#/bin/bash
#sed 脚本用法格式:sed [选项] 脚本 文件

#常用选项:
	#-n :不输出模式中的内容至屏幕,(不会将没有匹配到的文本输出到标准输出),只输出编辑到的文本
	#-e:指定多个脚本,实现多次编辑
	#-f:指定sed脚本
	#-i:直接修改原文件
	#-r:使用拓展的正则表达式
#脚本组成:
	#地址定界
		#(1)全文匹配:不给定地址表示全文匹配
		#(2)单地址匹配:写一个数字代表匹配第几行
		#(3)多地址匹配:给定一个范围
			#1,9:表示匹配第一行至第9行
		#(4)模式匹配:
			#/正则表达式/ 表示正则表达式匹配的行
			#1, /正则表达式/ 表示从第一行到正则表达式匹配的行
		#(5)步长匹配
			#1~2 表示所有的奇数行
			#2~2 表示所有的偶数行
	#编辑命令
		#(1)d:删除:对d(命令而言不能按照sed工作机制去理解),命令而言没有匹配到的文本不会输出到标准输出.
		#(2)p:打印:一定要有-n选项,若不加-n选项一行将会打印2遍
		#(3)a\字符串:在行后追加字符串,支持使用\n实现多行插入 sed '5a\new_line' :在第5行后增加一行的内容为:'new_line'
		#(4)i\字符串:在行前追加字符串
		#(5)c\字符串:把匹配到的行替换成字符串: sed '2c\yyy' :把第2行替换成字符串yyy
i		#(6)w 文件路径:将匹配到的行重新定向到指定文件中. 如:sed  '/^[^#]/w  out.txt'  /etc/exercise.txt :将非#开头的行保存至out.txt中
		#(7)r 文件路径:读取指定文件的内容插入到当前文件被匹配到的行处. 例如:sed '3r readfile.txt'  writefile.txt :将readfile.txt内的内容插入到writefile的第3行后面.
		#(8)=:表示被模式匹配到的行上面加一个行号. 例如: sed '/hello/=' test.txt :给匹配到hello的行上面加上行号 
		#(9)!:取反条件.例如 sed '/^#/!d' test.txt :将不以#开头的行删除
		#(10)s///:查找替换
			#修饰符有:
				#g:全局替换,表示可以替换一行中多次匹配到的字符串.如果不加g,只替换一行中第一次出现的字符串.
				#w 文件路径:替换成功的结果保存到指定文件中.
				#p:显示替换成功的行
